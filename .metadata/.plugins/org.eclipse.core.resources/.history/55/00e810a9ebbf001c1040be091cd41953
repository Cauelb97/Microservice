package com.user.registro.Controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.user.registro.entity.User;
import com.user.registro.model.request.UserRequestModel;
import com.user.registro.repository.UserRepository;

@RestController 
@RequestMapping(value="userregistro") 
public class UserController {

	@Autowired
	private UserRepository userRepository;
	
	@GetMapping("/all")
	public List<User> findAll(){
		return userRepository.findAll();
	}
	
	@GetMapping("{id}")
	public User getPessoa(@PathVariable (value = "id") long id ) {
		return (User) userRepository.findById(id);
	}
	
	
	@PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE ,value ="/inserir")
	public  ResponseEntity<Object> saveuser(@RequestBody @Valid UserRequestModel p) {
		if(userRepository.findId(p.getId())) { 
			return ResponseEntity.status(HttpStatus.CONFLICT).body("Confito: Email ja existe!");			
		}		
		var user = new User();
		BeanUtils.copyProperties(userDto, user); //converte userDto para user para salvar
		return ResponseEntity.status(HttpStatus.CREATED).body(userService.saveUser(user));
	}
	
	@DeleteMapping(consumes = MediaType.APPLICATION_JSON_VALUE, value="/deletar")
	public void deletarTaxa(@RequestBody User p) {
		userRepository.delete(p);
	}
	 
	@PutMapping(consumes = MediaType.APPLICATION_JSON_VALUE, value="/atualizar")
	public User atualizarTaxa(@RequestBody User p) {
		return userRepository.save(p);
	}
}

