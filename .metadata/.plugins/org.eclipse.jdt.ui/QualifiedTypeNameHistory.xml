<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.ui.model.CreateUserResponseModel"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.apache.catalina.authenticator.SpnegoAuthenticator.AuthenticateAction"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.resource.HttpResource"/>
    <fullyQualifiedTypeName name="java.net.http.HttpRequest"/>
    <fullyQualifiedTypeName name="java.net.http.HttpResponse"/>
    <fullyQualifiedTypeName name="javax.security.sasl.AuthenticationException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.ui.model.LoginRequestModel"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.security.AuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.data.UserEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.service.UsersService"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.api.users.shared.UserDto"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="java.security.Signature"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.junit.validator.PublicClassValidator"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.AnyRequestMatcher"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="javax.servlet.FilterChain"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="javax.servlet.ServletException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.NewConstructorTypeMunger"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.appsdeveloperblog.photoapp.aoi.gateway.security.AuthorizationFilter"/>
</qualifiedTypeNameHistroy>
